# The employee class is the base class. Some classes, like the Dork class, will inherit attributes from this one.
class Employee(object):
	def __init__(self, fname, sname, position):
		self.fname = fname
		self.sname = sname
		self.position = position
		
	#Explains what each person in the office is doing at the moment. 	
	def work(self):
		if self.position == 'Lizard King':
			print('\n%s is carrying out his hedonistic agenda!' %(self.fname))
		if self.position == 'Manager':
			print('\n%s is investigating a murdah!' %(self.fname))
		if self.position == 'Salesperson':
			print("\n%s is sellin' reams, baby!" %(self.fname))
		if self.position == 'Accountant':
			print('\n%s is calculating.' %(self.fname))
		if self.position == 'Supplier Relations':
			print('\n%s is satisfying a supplier.' %(self.fname))
		if self.position == 'Receptionist':
			print('\n%s is refilling the jelly beans.' %(self.fname))
		if self.position == 'Human Resources Representative':
			print('\n%s is writing the next great American novel.' %(self.fname))
		if self.position == 'Warehouse Manager':
			print('\n%s is texting with the ladies.' %(self.fname))
		if self.position == 'VP of Northeastern Sales':
			print('\n%s is watching a prime selection from the Cinema of the Unsettling.' %(self.fname))
		if self.position == 'Assistant to the Regional Manager':
			print('\n%s is plotting.' %(self.fname))
		if self.position == 'Temp':
			print('\n%s is WUPHFing!' %(self.fname))
		if self.position == 'Customer Service Representative':
			print('\n%s is online shopping.' %(self.fname))
	
	#Returns the full name and position of the person.	
	def __str__(self):
		return '\nName: %s, %s\nTitle: %s' %(self.sname, self.fname, self.position)

#A sub-class specifically for Holly	
class Dork(Employee):
	def __init__(self, fname, sname, position):
		Employee.__init__(self, fname, sname, position)
	
	def work(self):
		if self.position == 'Human Resources Representative':
			print('\n%s is doing a funny voice.' %(self.fname))

#All instances of classes			
Holly = Dork('Holly', 'Flax', 'Human Resources Representative')			
Mike = Employee('Michael', 'Scott', 'Manager')
Dwight = Employee('Dwight', 'Schrute', 'Assistant to the Regional Manager')
Jim = Employee('Jim', 'Halpert', 'Salesperson')
Pam = Employee('Pam', 'Halpert', 'Salesperson')
Ryan = Employee('Ryan', 'Howard', 'Temp')
Andy = Employee('Andy', 'Bernard', 'Salesperson')
Angela = Employee('Angela', 'Martin', 'Accountant')
Kelly = Employee('Kelly', 'Kapoor', 'Customer Service Representative')
Toby = Employee('Toby', 'Flenderson', 'Human Resources Representative')
Creed = Employee('Creed', 'Bratton', 'Quality Assurance')
Darryl = Employee('Darryl', 'Philbin', 'Warehouse Manager')
Kevin = Employee('Kevin', 'Malone', 'Accountant')
Meredith = Employee('Meredith', 'Palmer', 'Supplier Relations')
Oscar = Employee('Oscar', 'Martinez', 'Accountant')
Phyllis = Employee('Phyllis', 'Vance', 'Salesperson')
Stanley = Employee('Stanley', 'Hudson', 'Salesperson')
Gabe = Employee('Gabe', 'Lewis', 'VP of Northeastern Sales') 
Erin = Employee('Erin', 'Hannon', 'Receptionist')
Robert = Employee('Robert', 'California', 'Lizard King')

#Welcome message. Only appears when program starts.
def welcome():
	print("\nWelcome to the Scranton Branch!")

#The main list of options.	
def menu():
	print('\nWhat do you want to do?\n1) Spy on people\n2) Get information\n3) Buy paper\nExit?')
	rmb = input("\nChoice: ").lower()
	
	if rmb == '1':
		whats_up()
	elif rmb == '2':
		info()
	elif rmb == '3':
		buy_paper()
	elif rmb == 'quit' or rmb == 'exit':
		print('\nExiting...\n')
		exit()	
	else:
		print('\nSelect a number!')
		menu()

#Gives general information about a worker.
def info():
	ans = input('\nWho do you want to learn about? ').lower()
	
	if ans == 'michael':
		print(Mike)
		try_again_one()
	if ans == 'dwight':
		print(Dwight)
		try_again_one()
	if ans == 'jim':
		print(Jim)
		try_again_one()
	if ans == 'pam':
		print(Pam)
		try_again_one()
	if ans == 'ryan':
		print(Ryan)
		try_again_one()
	if ans == 'andy':
		print(Andy)
		try_again_one()
	if ans == 'angela':
		print(Angela)
		try_again_one()
	if ans == 'kelly':
		print(Kelly)
		try_again_one()
	if ans == 'toby':
		print(Toby)
		try_again_one()
	if ans == 'creed':
		print(Creed)
		try_again_one()
	if ans == 'darryl':
		print(Darryl)
		try_again_one()
	if ans == 'kevin':
		print(Kevin)
		try_again_one()
	if ans == 'meredith':
		print(Meredith)
		try_again_one()
	if ans == 'oscar':
		print(Oscar)
		try_again_one()
	if ans == 'phyllis':
		print(Phyllis)
		try_again_one()
	if ans == 'stanley':
		print(Stanley)
		try_again_one()
	if ans == 'gabe':
		print(Gabe)
		try_again_one()
	if ans == 'erin':
		print(Erin)
		try_again_one()
	if ans == 'robert':
		print(Robert)
		try_again_one()
	if ans == 'holly':
		print(Holly)
		try_again_one()
	else:
		print("\nI don't see them...")
		try_again_one()

#The try again function for the get information function
def try_again_one():
	x = input("\nTry again? [Y/N]: ")
	if x == "y" or x == "Y":
		info()
	elif x == "n" or x == "N":
		print()
		print("Returning to main menu...")
		menu()
	else:
		print()
		print("\nMake a choice!")
		print()
		try_again_one()
		
#The try again function for the spy function
def try_again_two():
	x = input("\nTry again? [Y/N]: ")
	if x == "y" or x == "Y":
		whats_up()
	elif x == "n" or x == "N":
		print()
		print("Returning to main menu...")
		menu()
	else:
		print()
		print("\nMake a choice!")
		print()
		try_again_two()
		
#Asks the user if they want to exit or start again.	
def done_checker():
	x = input("\nReturn to menu? [Y/N]: ")
	if x == "y" or x == "Y":
		menu()
	elif x == "n" or x == "N":
		print()
		print("Exiting...")
		exit()
	else:
		print()
		print("\nMake a choice!")
		print()
		done_checker()

#The main program. Asks the user which member of the office they'd like to spy on. Prompts the user to try again if the name isn't recognized.		
def whats_up():
	ans = input('\nWho do you want to check on? ').lower()
	
	if ans == 'michael':
		Mike.work()
		try_again_two()
	if ans == 'dwight':
		Dwight.work()
		try_again_two()
	if ans == 'jim':
		Jim.work()
		try_again_two()
	if ans == 'pam':
		Pam.work()
		try_again_two()
	if ans == 'ryan':
		Ryan.work()
		try_again_two()
	if ans == 'andy':
		Andy.work()
		try_again_two()
	if ans == 'angela':
		Angela.work()
		try_again_two()
	if ans == 'kelly':
		kelly.work()
		try_again_two()
	if ans == 'toby':
		Toby.work()
		try_again_two()
	if ans == 'creed':
		Creed.work()
		try_again_two()
	if ans == 'darryl':
		Darryl.work()
		try_again_two()
	if ans == 'kevin':
		Kevin.work()
		try_again_two()
	if ans == 'meredith':
		Meredith.work()
		try_again_two()
	if ans == 'oscar':
		Oscar.work()
		try_again_two()
	if ans == 'phyllis':
		Phyllis.work()
		try_again_two()
	if ans == 'stanley':
		Stanley.work()
		try_again_two()
	if ans == 'gabe':
		Gabe.work()
		try_again_two()
	if ans == 'erin':
		Erin.work()
		try_again_two()
	if ans == 'robert':
		Robert.work()
		try_again_two()
	if ans == 'holly':
		Holly.work()
		try_again_two()
	if ans == 'mose':
		print("Mose isn't at the office, he's wrestling dinner!")
		try_again_two()
	else:
		print("\nI don't see them...")
		done_checker()
# A paper buying simulator
def buy_paper():
	print("\nGreat! What weight of printer paper are you looking for?")
	type = input("\n1) 20 pound\n2) 24 pound\n3) 40 pound \nChoice: ")
	print("\nGlossy or matte finish?")
	finish = input("\n1) Glossy\n2) Matte \nChoice: ")
	
	#Calculates the cost of a ream, based on user input
	if type == '1' and finish == '1':
		price_per = 15.15
	elif type == '1' and finish == '2':
		price_per = 12.00
	elif type == '2' and finish == '1':
		price_per = 17.40
	elif type == '2' and finish == '2':
		price_per = 16.70
	elif type == '3' and finish == '1':
		price_per = 21.20
	elif type == '3' and finish == '2':
		price_per = 19.45
	else:
		print("\nSYSTEM ERROR. RETURNING TO MAIN MENU.")
		menu()
		
	quant = int(input("\nHow many reams would you like to purchase? "))
	
	final_price = price_per*quant
	discount_price = ((price_per - 0.05)*quant)
	
	print("\nGreat! Your total is", '${:.2f}.'.format(final_price), "However, when we subtract the Friends and Family Discount, it comes to", '${:.2f}.'.format(discount_price))
	print("\nWe have billed your account! Expect your delivery to arrive in one to ten business days. Bye!\n")	
	done_checker()
	
welcome()
menu()
